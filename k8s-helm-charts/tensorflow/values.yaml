global:
  imagePullPolicy: IfNotPresent
  services:
    aws:
      region: us-east-1
      az: us-east-1a
      efs:
        id: fs-47cd610e

storage:
  name: tensorflow-fs
  accessMode: ReadWriteMany
  pv: 
    capacity: "900Gi"
  pvc:
    name: tensorflow-fs
    request: "750Gi"

tfCluster:
  deploy: true
  service:
    name: tenhsorflow-cluster
    internalPort: 8080
    externalPort: 8080
    type: ClusterIP
  image: 
    repo: samnco
    name: tf-models
    dockerTagCpu: train-0.11-0.0.8
    dockerTagGpu: train-0.11-gpu-0.0.8
  settings:
    mode: continuous
    dataset: imagenet
    isGpu: true
    nbGpuPerNode: 1
    jobs: 
      ps: 1
      worker: 2
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

evaluating:
  deploy: true
  replicaCount: 1
  image: 
    repo: samnco
    name: tf-models
    dockerTagCpu: train-0.11-0.0.8
    dockerTagGpu: train-0.11-gpu-0.0.8
  service:
    name: eval
    command: '[ "/eval.sh" ]'
  settings:
    dataset: imagenet
    isGpu: true
    nbGpuPerNode: 1
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 4Gi

tensorboard:
  deploy: true
  replicaCount: 1
  image: 
    repo: gcr.io/tensorflow
    name: tensorflow
    dockerTag: 1.0.0
  service:
    name: tensorboard
    dns: tensorboard.madeden.net
    type: ClusterIP
    externalPort: 6006
    internalPort: 6006
  settings:
  resources:
    requests:
      cpu: 2000m
      memory: 4Gi
    limits:
      cpu: 4000m
      memory: 8Gi

serving:
  deploy: true
  replicaCount: 3
  image: 
    repo: samnco
    name: tf-models
    dockerTag: serving-1.0.2
  service:
    name: serving
    dns: inception.madeden.net
    type: ClusterIP
    externalPort: 8500
    internalPort: 8500
    command: '[ "/serve.sh" ]'
  settings:
    dataset: imagenet
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

